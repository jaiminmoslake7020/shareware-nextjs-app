# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy ShareWare NextJS SSN App with Github Actions

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 18 ] # Test on multiple Node.js versions
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      # Step 3: Cache Yarn dependencies
      - name: Cache Yarn dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.yarn/cache
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install
      - name: Run build
        run: npm run build

  #  Deployment job
  deploy:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        node-version: [ 18 ] # Test on multiple Node.js versions
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      # Step 3: Cache Yarn dependencies
      - name: Cache Yarn dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.yarn/cache
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install  # or your package manager (yarn, pnpm, etc.)

      - name: Run build
        run: npm run build

      - name: Build the project and upload to Netlify
        run:  netlify deploy --prod --dir=out   # or the command you use to build your project
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID__SHAREWARE_SITE_ID }}  # Add this if you want to specify the site
